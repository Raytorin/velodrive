name: CI/CD

on:
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: "0"
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
    services:
      postgres_main:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: checking the repository for changes
        uses: actions/checkout@v4

      - name: installing Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: run migrations
        run: python manage.py migrate

      - name: collect static files
        run: python manage.py collectstatic --noinput

#      - name: linting
#        run: flake8 .

      - name: set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: build Docker image
        run: docker build -t velodrive_app .

      - name: Test Docker image
        run: docker run --rm velodrive_app python manage.py test

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Deploy services using Docker Compose
        run: docker-compose -f docker-compose.yml up -d

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js (если нужна установка Node.js, иначе можете пропустить)
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies (если нужно)
        run: npm install

      - name: Build (если есть команда сборки, иначе пропустить)
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./
